/* Generic */

:root {
    /* Colors */
    --text-color: #ffffff;

    --bg-color-darkest: #171717;
    --bg-color-basic: #212121;
    --bg-color-lightest: #454545;

    --button-bg-color: rgba(151, 151, 151, 0.22);            /* Must have contrast to background, must have transparency */
    --button-bg-color-hover: var(--general-accent-color);

    --option-bg-color: var(--button-bg-color);

    --icon-filter: invert(1);                                /* Inversion for grayscale icons */

    --general-accent-color: rgba(255, 141, 44, 0.5);

    --general-hover-filter: opacity(1) brightness(1);

    --link-color: #ff7633;
    --link-hover: #ffa400;
    --link-visited: #b35729;
    --link-active: #ffcc00;

    /* z-index ranges for various elements (starting values, 100 values reserved for each) */
    --zindex-visual-core: 0;               /* Core visual elements like video */
    --zindex-drawings: 200;                /* Created element */
    --zindex-textAreas: 300;               /* Created element */
    --zindex-overlays: 400;                /* Created element */

    --zindex-interface-dynamic: 700;       /* Interface elements that can go under other interface elements */
    --zindex-interface-core: 800;          /* Interface elements that must not be covered */
    --zindex-prompts: 900;                 /* Prompts that should almost always be possible to interact with */
    --zindex-modals: 1000;                 /* Modal elements that can cover everything else */

    --zindex-dev: 9000;                    /* Developer elements */

    /* Animations */
    --general-transitions: opacity 400ms ease, background-color 20ms linear, transform 300ms ease-in-out;

}

* {
    user-select: none; /* Almost nothing should be possible to select */

    transition: var(--general-transitions);

}

a {
    color: var(--link-color);
}
a:hover {
    color: var(--link-hover);
}
a:visited {
    color: var(--link-visited);
}
a:active {
    color: var(--link-active);
}

body {
    height:100%;
    overflow: hidden;

    margin: 7px;

    font-family: 'Noto Sans', sans-serif;

    background-color: var(--bg-color-basic);
    color: var(--text-color);
}

textarea {
    /*  user-select: text; Text in text areas could be selectable */
}

/* Light mode */

.lightMode {
    --text-color: #000000;

    --bg-color-darkest: #dadada;
    --bg-color-basic: #ececec;
    --bg-color-lightest: #ffffff;

    --button-bg-color: rgba(255, 255, 255, 0.43);
    --button-bg-color-hover: var(--general-accent-color);

    --option-bg-color: rgba(173, 231, 255, 0.51);

    --icon-filter: invert(0);

    --general-accent-color: rgba(0, 178, 255, 0.6);

    --link-color: #1111ff;
    --link-hover: #4141ff;
    --link-visited: #6811ff;
    --link-active: #6161ff;
}





/* Generic buttons */

button {
    width: max-content;
    min-width: 30px;
    min-height: 30px;
    padding: 5px;
    margin: auto;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border: none;

    filter: var(--general-hover-filter);

    background-size: cover;
    background-position: center;
    border-radius: 5px;

    background-color: var(--button-bg-color);
    color: var(--text-color);
}

button:hover {
    background-color: var(--button-bg-color-hover);
}

.buttonSmall {
    color: var(--text-color);

    min-width: 23px;
    min-height: 23px;
}

.icon {
    width: 30px;
    height: 30px;
    object-fit: contain; /* Ensures the icon fits within defined width and height */

    filter: var(--icon-filter);
}

.icon:hover {
    filter: var(--general-hover-filter) var(--icon-filter);
}

.promptOptionContainer {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    justify-content: flex-end;

    gap: 0;
}

.promptOption {
    width: 100%;
    margin: 4px 0;
    border: none;
    padding: 10px;
    border-radius: 5px;

    background-color: var(--option-bg-color);
    color: var(--text-color);
}

/* Specific controls */

#zoomControls {
    display: flex;
    margin-left: 15px;
    margin-right: 15px;
    align-items: center;

    gap: 5px;   /* FF: 2px looks good, Chrome needs more */

    color: var(--text-color);
}

#zoomSlider {
    accent-color: var(--general-accent-color);
}

#buttonCollapse,
#buttonFullScreen {
    aspect-ratio: 1/1;
    position: absolute;
    margin: 5px;
    z-index: 101;
    bottom: 0;
}

#buttonCollapse {
    right: 56px;
}

#buttonFullScreen {
    right: 6px;
}

#textControls {
    display: flex;
    gap: 5px;

    justify-content: center;
    align-items: center;

    color: var(--text-color);
}

#buttonSmallerFont,
#buttonBiggerFont {
    min-width: 23px;
    min-height: 23px;
    font-size: 21px;
    display: inline-flex;
    align-items: center;
    padding: 0;
    margin: 0;
}

#buttonSmallerFont:hover,
#buttonBiggerFont:hover {
    filter: filter: var(--general-hover-filter);
}

/* Core UI */

#controlBar {
    display: inline-flex;
    position: absolute;
    height: 50px;
    width: 100%;
    z-index: 99;
    bottom: 0;

    align-items: center;

    background-color: var(--bg-color-darkest);
    color: var(--text-color);
}

#selectorDevice {
    width: 200px;
    height: 40px;
    border-radius: 8px;
    outline: none;
    border: 1px solid var(--text-color);

    background-color: var(--bg-color-basic);
    color: var(--text-color);
}

#island_controlBar {
    position: absolute;
    cursor: move;
    z-index: 100;
    display: flex;
    flex-direction: column;
    width: 120px;
    height: max-content;
    border-radius: 10px;
    padding-bottom: 10px;
    padding-top: 10px;

    gap: 7px;

    background-color: var(--bg-color-lightest);
    color: var(--text-color);
}

/* Core elements */

#cameraFeed {
    display: block;
    min-width: 100%;
    height: 100%;
    object-fit: cover;
    position: relative;
    z-index: 1;
    border-radius: 5px;
}

#canvasMain {
    display: none;
    width: 100%;
    height: 100%;
    margin-left: auto;
    margin-right: auto;
    position: relative;
}

#videoContainer {
    width: 100%;
    height: 100%;
    z-index: 1;
}

/* Programmatically created elements */

.createdTextAreaContainer { /* TODO: Not referenced */
    position: absolute;
    left: 300px;
    top: 100px;
    min-width: 150px;
    min-height: 40px;
    z-index: 7;
}

.createdTextArea {
    user-select: text !important; /* Text in text areas should be selectable */
    position: absolute;
    width: 100%;
    height: 100%;
    font-size: 30px;
    resize: none; /* Prefer custom implementation for resize */
    overflow: auto;
    cursor: move; /* TODO: Will not allow for text selection cursor, related: drag handler interferes with text selection */
}

.createdTextAreaRemoveButton { /* TODO: Not referenced */
    left: 0;
    width: 20px;
    height: 20px;
    margin-top: -18px;
    position: absolute;
    display: none;
    border-radius: 10px;
    padding-bottom: 10px;
}

.createdTextAreaResizeHandle {
    width: 15px;
    height: 15px;
    background-color: gray;
    position: absolute;
    right: 0;
    bottom: 0;
    cursor: se-resize;
    z-index: 8;
    clip-path: polygon(100% 0, 0 100%, 100% 100%);
}






.overlay { /* TODO: Should start with created */
    width: 105%;
    height: 105%;
    background: linear-gradient(to bottom, #e6e6e6, #222222);
    cursor: move;
    z-index: 10;
    position: absolute;
    left: 2%;
    top: 2%;
}

.overlayRemoveButton {

    width: 5%;
    height: 20px;
    margin: -10px auto auto;
    display: none;
}



.prompt {
    transform: translateX(-50%);
    background-color: var(--bg-color-lightest);
    border-radius: 10px;
    padding: 10px;
    z-index: 900;
}

.promptTitle {
    font-size: 20px;
    text-align: center;
    margin-bottom: 10px;

    color: var(--text-color);
}

.promptText {
    text-align: justify;        /* Text fills horizontal space */
    margin-bottom: 10px;

    color: var(--text-color);
}


